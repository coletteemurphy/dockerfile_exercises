pipeline{
    agent any
    environment{
        VERSION = "V1"
        DOCKERHUB_CREDS = credentials('dockerhub')
    }
    stages{
        stage('Build images'){
            steps{
                echo "build flask app - use version "
                sh "docker build -t ${DOCKERHUB_CREDS_USR}/task1-flask-app:${VERSION} Task1"
                echo "build nginx - use version "
                sh "docker build -t ${DOCKERHUB_CREDS_USR}/task1-nginx:${VERSION} -f Task1/Dockerfile.nginx Task1"
            }     
        }
        stage('Deploy containers'){
            steps{
                echo "delete any old images"
                sh "docker rm -f \$(docker ps -qa) || true"
                echo "create network"
                sh "docker network create example-network || true"   
               
                echo "deploy flak app on network with pass for YOUR_NAME (docker run image:version)" 
                sh "docker run -d --network example-network --name flask-app -e YOUR_NAME=ColetteOnJenkins ${DOCKERHUB_CREDS_USR}/task1-flask-app:${VERSION}"
                echo "DEPLOY nginx with port "   
                sh "docker run -d -p 80:80 --name nginx --network example-network ${DOCKERHUB_CREDS_USR}/task1-nginx:${VERSION}"
                 
            }     
        }
        stage('Push to   docker hub'){
            steps{
                echo "login to dockerhub with credentials"   
                echo "push flask app" 
                echo "push nginx" 
                echo "logout of dockerhub "    
            }     
        }
        stage('tidy up'){
            steps{
                echo "delete old containers"
                //delete old images (not current version as is image for running container)
            }
        }
    }
}